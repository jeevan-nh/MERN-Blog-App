{"ast":null,"code":"import axios from 'axios';\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt_decode\";\nimport { SET_CURRENT_USER, TOGGLE_USER_LOADING } from './types';\nimport { restPost } from './postActions';\nimport { setErrors } from \"./errorActions\";\nexport const registerUser = (userData, history) => dispatch => {\n  dispatch(toggleUserLoading());\n  axios.post(\"/api/users/signup\", userData).then(res => {\n    dispatch(toggleUserLoading());\n    localStorage.setItem(\"loginMessage\", \"Successfully registered.Login to continue\");\n    history.push('/login');\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(toggleUserLoading());\n  });\n};\nexport const loginUser = userData => dispatch => {\n  dispatch(toggleUserLoading());\n  axios.post('/api/users/login', userData).then(res => {\n    dispatch(restPost());\n    const {\n      token\n    } = res.data;\n    localStorage.serItem(\"jwtToken\", token);\n    setAuthToken(token);\n    const decode = jwt_decode(token);\n    dispatch(setCurrentUser(decode));\n    dispatch(toggleUserLoading());\n  }).catch(err => {\n    dispatch(setErrors(err.response.data));\n    dispatch(toggleUserLoading());\n  });\n};\nexport const setCurrentuser = userData => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: userData\n  };\n};\nexport const toggleUserLoading = () => {\n  return {\n    type: TOGGLE_USER_LOADING\n  };\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem(\"jwtToken\");\n  setAuthToken(false);\n  dispatch(setCurrentuser({}));\n};","map":{"version":3,"sources":["C:/Users/jhemmann/Documents/Rest_api/MERN-3/blogApplication/client/src/actions/authActions.js"],"names":["axios","setAuthToken","jwt_decode","SET_CURRENT_USER","TOGGLE_USER_LOADING","restPost","setErrors","registerUser","userData","history","dispatch","toggleUserLoading","post","then","res","localStorage","setItem","push","catch","err","response","data","loginUser","token","serItem","decode","setCurrentUser","setCurrentuser","type","payload","logoutUser","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,SAAQC,gBAAR,EAA0BC,mBAA1B,QAAoD,SAApD;AACA,SAAQC,QAAR,QAAuB,eAAvB;AACA,SAASC,SAAT,QAA0B,gBAA1B;AAEA,OAAO,MAAMC,YAAY,GAAG,CAACC,QAAD,EAAUC,OAAV,KAAsBC,QAAQ,IAAI;AAC1DA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAX,EAAAA,KAAK,CAACY,IAAN,CAAW,mBAAX,EAA+BJ,QAA/B,EACKK,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAI,IAAAA,YAAY,CAACC,OAAb,CACI,cADJ,EAEI,2CAFJ;AAIAP,IAAAA,OAAO,CAACQ,IAAR,CAAa,QAAb;AACH,GARL,EASKC,KATL,CASWC,GAAG,IAAI;AACVT,IAAAA,QAAQ,CAACJ,SAAS,CAACa,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAV,CAAR;AACAX,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACH,GAZL;AAaH,CAfM;AAiBP,OAAO,MAAMW,SAAS,GAAGd,QAAQ,IAAIE,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAX,EAAAA,KAAK,CAACY,IAAN,CAAW,kBAAX,EAA8BJ,QAA9B,EACKK,IADL,CACUC,GAAG,IAAI;AACTJ,IAAAA,QAAQ,CAACL,QAAQ,EAAT,CAAR;AACA,UAAM;AAACkB,MAAAA;AAAD,QAAUT,GAAG,CAACO,IAApB;AACAN,IAAAA,YAAY,CAACS,OAAb,CAAqB,UAArB,EAAgCD,KAAhC;AACAtB,IAAAA,YAAY,CAACsB,KAAD,CAAZ;AACA,UAAME,MAAM,GAAIvB,UAAU,CAACqB,KAAD,CAA1B;AACAb,IAAAA,QAAQ,CAACgB,cAAc,CAACD,MAAD,CAAf,CAAR;AACAf,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACH,GATL,EAUKO,KAVL,CAUWC,GAAG,IAAI;AACVT,IAAAA,QAAQ,CAACJ,SAAS,CAACa,GAAG,CAACC,QAAJ,CAAaC,IAAd,CAAV,CAAR;AACAX,IAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACH,GAbL;AAcH,CAhBM;AAkBP,OAAO,MAAMgB,cAAc,GAAInB,QAAQ,IAAI;AACvC,SAAO;AACHoB,IAAAA,IAAI,EAAEzB,gBADH;AAEH0B,IAAAA,OAAO,EAAErB;AAFN,GAAP;AAIH,CALM;AAOP,OAAO,MAAMG,iBAAiB,GAAG,MAAM;AACnC,SAAO;AACHiB,IAAAA,IAAI,EAAExB;AADH,GAAP;AAGH,CAJM;AAMP,OAAO,MAAM0B,UAAU,GAAG,MAAMpB,QAAQ,IAAI;AACxCK,EAAAA,YAAY,CAACgB,UAAb,CAAwB,UAAxB;AACA9B,EAAAA,YAAY,CAAC,KAAD,CAAZ;AACAS,EAAAA,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR;AACH,CAJM","sourcesContent":["import axios from 'axios';\r\nimport setAuthToken from \"../utils/setAuthToken\";\r\nimport jwt_decode from \"jwt_decode\";\r\n\r\nimport {SET_CURRENT_USER, TOGGLE_USER_LOADING} from './types';\r\nimport {restPost} from './postActions';\r\nimport { setErrors } from \"./errorActions\";\r\n\r\nexport const registerUser = (userData,history) => dispatch => {\r\n    dispatch(toggleUserLoading());\r\n    axios.post(\"/api/users/signup\",userData)\r\n        .then(res => {\r\n            dispatch(toggleUserLoading());\r\n            localStorage.setItem(\r\n                \"loginMessage\",\r\n                \"Successfully registered.Login to continue\"\r\n            );\r\n            history.push('/login');\r\n        })\r\n        .catch(err => {\r\n            dispatch(setErrors(err.response.data))\r\n            dispatch(toggleUserLoading());\r\n        })\r\n};\r\n\r\nexport const loginUser = userData => dispatch => {\r\n    dispatch(toggleUserLoading());\r\n    axios.post('/api/users/login',userData)\r\n        .then(res => {\r\n            dispatch(restPost());\r\n            const {token} = res.data;\r\n            localStorage.serItem(\"jwtToken\",token);\r\n            setAuthToken(token);\r\n            const decode  = jwt_decode(token);\r\n            dispatch(setCurrentUser(decode))\r\n            dispatch(toggleUserLoading());\r\n        })\r\n        .catch(err => {\r\n            dispatch(setErrors(err.response.data));\r\n            dispatch(toggleUserLoading());\r\n        });\r\n};\r\n\r\nexport const setCurrentuser =  userData => {\r\n    return {\r\n        type: SET_CURRENT_USER,\r\n        payload: userData\r\n    };\r\n};\r\n\r\nexport const toggleUserLoading = () => {\r\n    return {\r\n        type: TOGGLE_USER_LOADING\r\n    };\r\n};\r\n\r\nexport const logoutUser = () => dispatch => {\r\n    localStorage.removeItem(\"jwtToken\");\r\n    setAuthToken(false);\r\n    dispatch(setCurrentuser({}));\r\n};"]},"metadata":{},"sourceType":"module"}