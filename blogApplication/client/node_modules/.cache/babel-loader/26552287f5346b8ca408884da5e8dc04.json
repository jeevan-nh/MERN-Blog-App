{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhemmann\\\\Documents\\\\Rest_api\\\\MERN-3\\\\blogApplication\\\\client\\\\src\\\\containers\\\\auth\\\\SignUpPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { registerUser } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/errorActions\";\nimport Validate from \"../../components/form/Validate\";\nimport SignUp from \"../../components/auth/SignUp\";\n\nconst SignUpPage = ({\n  history,\n  registerUser,\n  auth,\n  errors,\n  clearErrors\n}) => {\n  const [user, setUser] = useState({\n    user_name: \"\",\n    email: \"\",\n    password: \"\",\n    errors: {}\n  }); // clearing error incase user switches to login page while already having errors in login page\n\n  useEffect(() => {\n    const unlisten = history.listen(() => clearErrors());\n    return () => unlisten();\n  }, [history, clearErrors]);\n  useEffect(() => {\n    if (auth.isAuthenticated) history.push(\"/blog\");\n    setUser(user => {\n      return { ...user,\n        errors\n      };\n    });\n  }, [errors, auth, history]);\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const err = { ...user.errors,\n      ...Validate(name, value).errors\n    };\n    setUser({ ...user,\n      errors: { ...err\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      user_name,\n      email,\n      password\n    } = user;\n    registerUser({\n      user_name,\n      email,\n      password\n    }, history);\n  };\n\n  return /*#__PURE__*/React.createElement(SignUp, {\n    loading: auth.userLoading,\n    user: { ...user\n    },\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  });\n};\n\nSignUpPage.propTypes = {\n  registerUser: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  registerUser,\n  clearErrors\n})(SignUpPage);","map":{"version":3,"sources":["C:/Users/jhemmann/Documents/Rest_api/MERN-3/blogApplication/client/src/containers/auth/SignUpPage.js"],"names":["React","useState","useEffect","PropTypes","connect","registerUser","clearErrors","Validate","SignUp","SignUpPage","history","auth","errors","user","setUser","user_name","email","password","unlisten","listen","isAuthenticated","push","handleChange","e","target","name","value","handleBlur","err","handleSubmit","preventDefault","userLoading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,2BAA7B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,OAAOC,QAAP,MAAqB,gCAArB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA,OAAF;AAAWL,EAAAA,YAAX;AAAyBM,EAAAA,IAAzB;AAA+BC,EAAAA,MAA/B;AAAuCN,EAAAA;AAAvC,CAAD,KAA0D;AAC1E,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC;AAC9Bc,IAAAA,SAAS,EAAE,EADmB;AAE9BC,IAAAA,KAAK,EAAE,EAFuB;AAG9BC,IAAAA,QAAQ,EAAE,EAHoB;AAI9BL,IAAAA,MAAM,EAAE;AAJsB,GAAD,CAAhC,CAD0E,CAQ1E;;AACAV,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMgB,QAAQ,GAAGR,OAAO,CAACS,MAAR,CAAe,MAAMb,WAAW,EAAhC,CAAjB;AACA,WAAO,MAAMY,QAAQ,EAArB;AACF,GAHQ,EAGN,CAACR,OAAD,EAAUJ,WAAV,CAHM,CAAT;AAKAJ,EAAAA,SAAS,CAAC,MAAM;AACb,QAAIS,IAAI,CAACS,eAAT,EAA0BV,OAAO,CAACW,IAAR,CAAa,OAAb;AAC1BP,IAAAA,OAAO,CAACD,IAAI,IAAI;AACb,aAAO,EAAE,GAAGA,IAAL;AAAWD,QAAAA;AAAX,OAAP;AACF,KAFM,CAAP;AAGF,GALQ,EAKN,CAACA,MAAD,EAASD,IAAT,EAAeD,OAAf,CALM,CAAT;;AAOA,QAAMY,YAAY,GAAGC,CAAC,IAAI;AACvBT,IAAAA,OAAO,CAAC,EACL,GAAGD,IADE;AAEL,OAACU,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFrB,KAAD,CAAP;AAIF,GALD;;AAOA,QAAMC,UAAU,GAAGJ,CAAC,IAAI;AACrB,UAAM;AAAEE,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBH,CAAC,CAACC,MAA1B;AACA,UAAMI,GAAG,GAAG,EAAE,GAAGf,IAAI,CAACD,MAAV;AAAkB,SAAGL,QAAQ,CAACkB,IAAD,EAAOC,KAAP,CAAR,CAAsBd;AAA3C,KAAZ;AACAE,IAAAA,OAAO,CAAC,EAAE,GAAGD,IAAL;AAAWD,MAAAA,MAAM,EAAE,EAAE,GAAGgB;AAAL;AAAnB,KAAD,CAAP;AACF,GAJD;;AAMA,QAAMC,YAAY,GAAGN,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACO,cAAF;AACA,UAAM;AAAEf,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,QAAiCJ,IAAvC;AACAR,IAAAA,YAAY,CAAC;AAAEU,MAAAA,SAAF;AAAaC,MAAAA,KAAb;AAAoBC,MAAAA;AAApB,KAAD,EAAiCP,OAAjC,CAAZ;AACF,GAJD;;AAMA,sBACG,oBAAC,MAAD;AACG,IAAA,OAAO,EAAEC,IAAI,CAACoB,WADjB;AAEG,IAAA,IAAI,EAAE,EAAE,GAAGlB;AAAL,KAFT;AAGG,IAAA,MAAM,EAAEc,UAHX;AAIG,IAAA,QAAQ,EAAEL,YAJb;AAKG,IAAA,QAAQ,EAAEO,YALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH;AASF,CAjDD;;AAmDApB,UAAU,CAACuB,SAAX,GAAuB;AACpB3B,EAAAA,YAAY,EAAEF,SAAS,CAAC8B,IAAV,CAAeC,UADT;AAEpB5B,EAAAA,WAAW,EAAEH,SAAS,CAAC8B,IAAV,CAAeC,UAFR;AAGpBvB,EAAAA,IAAI,EAAER,SAAS,CAACgC,MAAV,CAAiBD,UAHH;AAIpBtB,EAAAA,MAAM,EAAET,SAAS,CAACgC,MAAV,CAAiBD;AAJL,CAAvB;;AAOA,MAAME,eAAe,GAAGC,KAAK,KAAK;AAC/B1B,EAAAA,IAAI,EAAE0B,KAAK,CAAC1B,IADmB;AAE/BC,EAAAA,MAAM,EAAEyB,KAAK,CAACzB;AAFiB,CAAL,CAA7B;;AAKA,eAAeR,OAAO,CACnBgC,eADmB,EAEnB;AAAE/B,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAFmB,CAAP,CAGbG,UAHa,CAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/errorActions\";\r\nimport Validate from \"../../components/form/Validate\";\r\nimport SignUp from \"../../components/auth/SignUp\";\r\n\r\nconst SignUpPage = ({ history, registerUser, auth, errors, clearErrors }) => {\r\n   const [user, setUser] = useState({\r\n      user_name: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n   });\r\n\r\n   // clearing error incase user switches to login page while already having errors in login page\r\n   useEffect(() => {\r\n      const unlisten = history.listen(() => clearErrors());\r\n      return () => unlisten();\r\n   }, [history, clearErrors]);\r\n\r\n   useEffect(() => {\r\n      if (auth.isAuthenticated) history.push(\"/blog\");\r\n      setUser(user => {\r\n         return { ...user, errors };\r\n      });\r\n   }, [errors, auth, history]);\r\n\r\n   const handleChange = e => {\r\n      setUser({\r\n         ...user,\r\n         [e.target.name]: e.target.value\r\n      });\r\n   };\r\n\r\n   const handleBlur = e => {\r\n      const { name, value } = e.target;\r\n      const err = { ...user.errors, ...Validate(name, value).errors };\r\n      setUser({ ...user, errors: { ...err } });\r\n   };\r\n\r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n      const { user_name, email, password } = user;\r\n      registerUser({ user_name, email, password }, history);\r\n   };\r\n\r\n   return (\r\n      <SignUp\r\n         loading={auth.userLoading}\r\n         user={{ ...user }}\r\n         onBlur={handleBlur}\r\n         onChange={handleChange}\r\n         onSubmit={handleSubmit}\r\n      />\r\n   );\r\n};\r\n\r\nSignUpPage.propTypes = {\r\n   registerUser: PropTypes.func.isRequired,\r\n   clearErrors: PropTypes.func.isRequired,\r\n   auth: PropTypes.object.isRequired,\r\n   errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   auth: state.auth,\r\n   errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { registerUser, clearErrors }\r\n)(SignUpPage);"]},"metadata":{},"sourceType":"module"}