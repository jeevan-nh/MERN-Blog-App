{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jhemmann\\\\Documents\\\\Rest_api\\\\MERN-3\\\\blogApplication\\\\client\\\\src\\\\containers\\\\auth\\\\LoginPage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport Login from \"../../components/auth/Login\";\nimport Validate from \"../../components/form/Validate\";\nimport { connect } from \"react-redux\";\nimport { loginUser } from \"../../actions/authActions\";\nimport { clearErrors } from \"../../actions/\";\n\nconst LoginPage = ({\n  loginUser,\n  auth,\n  errors,\n  history,\n  clearErrors\n}) => {\n  const [user, setUser] = useState({\n    email: \"\",\n    password: \"\",\n    errors: {}\n  });\n  const [message, setMessage] = useState(\"\"); // clearing error incase user switches to login page while already having errors in signup page\n\n  useEffect(() => {\n    const unlisten = history.listen(() => clearErrors());\n\n    if (localStorage.loginMessage) {\n      setMessage(localStorage.loginMessage);\n      localStorage.setItem(\"loginMessage\", \"\");\n    }\n\n    return () => unlisten();\n  }, [history, clearErrors]);\n  useEffect(() => {\n    if (auth.isAuthenticated) {\n      history.push(\"/blog\");\n    }\n\n    setUser(user => {\n      return { ...user,\n        errors\n      };\n    });\n  }, [auth, errors, history]);\n\n  const handleChange = e => {\n    setUser({ ...user,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const handleBlur = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    const error = { ...user.errors,\n      ...Validate(name, value).errors\n    };\n    setUser({ ...user,\n      errors: { ...error\n      }\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      email,\n      password\n    } = user;\n    loginUser({\n      email,\n      password\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(Login, {\n    message: message,\n    loading: auth.userLoading,\n    user: { ...user\n    },\n    onBlur: handleBlur,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  });\n};\n\nLoginPage.propTypes = {\n  loginUser: PropTypes.func.isRequired,\n  clearErrors: PropTypes.func.isRequired,\n  auth: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth,\n  errors: state.errors\n});\n\nexport default connect(mapStateToProps, {\n  loginUser,\n  clearErrors\n})(LoginPage);","map":{"version":3,"sources":["C:/Users/jhemmann/Documents/Rest_api/MERN-3/blogApplication/client/src/containers/auth/LoginPage.js"],"names":["React","useState","useEffect","PropTypes","Login","Validate","connect","loginUser","clearErrors","LoginPage","auth","errors","history","user","setUser","email","password","message","setMessage","unlisten","listen","localStorage","loginMessage","setItem","isAuthenticated","push","handleChange","e","target","name","value","handleBlur","error","handleSubmit","preventDefault","userLoading","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Login from \"../../components/auth/Login\";\r\nimport Validate from \"../../components/form/Validate\";\r\nimport { connect } from \"react-redux\";\r\nimport { loginUser } from \"../../actions/authActions\";\r\nimport { clearErrors } from \"../../actions/\";\r\n\r\nconst LoginPage = ({ loginUser, auth, errors, history, clearErrors }) => {\r\n   const [user, setUser] = useState({\r\n      email: \"\",\r\n      password: \"\",\r\n      errors: {}\r\n   });\r\n\r\n   const [message, setMessage] = useState(\"\");\r\n\r\n   // clearing error incase user switches to login page while already having errors in signup page\r\n   useEffect(() => {\r\n      const unlisten = history.listen(() => clearErrors());\r\n      if (localStorage.loginMessage) {\r\n         setMessage(localStorage.loginMessage);\r\n         localStorage.setItem(\"loginMessage\", \"\");\r\n      }\r\n      return () => unlisten();\r\n   }, [history, clearErrors]);\r\n\r\n   useEffect(() => {\r\n      if (auth.isAuthenticated) {\r\n         history.push(\"/blog\");\r\n      }\r\n      setUser(user => {\r\n         return { ...user, errors };\r\n      });\r\n   }, [auth, errors, history]);\r\n\r\n   const handleChange = e => {\r\n      setUser({\r\n         ...user,\r\n         [e.target.name]: e.target.value\r\n      });\r\n   };\r\n\r\n   const handleBlur = e => {\r\n      const { name, value } = e.target;\r\n      const error = { ...user.errors, ...Validate(name, value).errors };\r\n      setUser({ ...user, errors: { ...error } });\r\n   };\r\n\r\n   const handleSubmit = e => {\r\n      e.preventDefault();\r\n      const { email, password } = user;\r\n      loginUser({ email, password });\r\n   };\r\n\r\n   return (\r\n      <Login\r\n         message={message}\r\n         loading={auth.userLoading}\r\n         user={{ ...user }}\r\n         onBlur={handleBlur}\r\n         onChange={handleChange}\r\n         onSubmit={handleSubmit}\r\n      />\r\n   );\r\n};\r\n\r\nLoginPage.propTypes = {\r\n   loginUser: PropTypes.func.isRequired,\r\n   clearErrors: PropTypes.func.isRequired,\r\n   auth: PropTypes.object.isRequired,\r\n   errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n   auth: state.auth,\r\n   errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n   mapStateToProps,\r\n   { loginUser, clearErrors }\r\n)(LoginPage);"]},"metadata":{},"sourceType":"module"}